# Generated by Django 4.2.5 on 2023-11-07 06:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('userID', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('userEmail', models.EmailField(max_length=45)),
                ('userNickname', models.CharField(max_length=8)),
                ('userAge', models.IntegerField()),
                ('userSex', models.IntegerField()),
                ('userWeight', models.IntegerField()),
                ('userWD', models.CharField(max_length=10)),
                ('anaerobicScore', models.FloatField(default=0.0)),
                ('aerobicScore', models.FloatField(default=0.0)),
                ('Score', models.FloatField(default=0.0)),
                ('AgeRank', models.IntegerField(blank=True, null=True)),
                ('CustomRank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'userTBL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all granted to each of their groups.', related_name='customuser_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Speciffic permissions for this user.', related_name='customuser_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
